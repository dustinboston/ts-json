/**
 * A list of all Ast properties excluding the following:
 *
 * - emitNode
 * - end
 * - flags
 * - flowNode
 * - id
 * - isReferenced
 * - mergeId
 * - modifierFlagsCache
 * - parent
 * - pos
 * - symbol
 * - transformFlags
 *
 * @internal
 */
export const properties = new Set<string>([
    "argument",
    "argumentExpression",
    "arguments",
    "assertsModifier",
    "asteriskToken",
    "attributes",
    "awaitModifier",
    "block",
    "body",
    "caseBlock",
    "catchClause",
    "checkType",
    "children",
    "class",
    "clauses",
    "closingElement",
    "colonToken",
    "comment",
    "condition",
    "constraint",
    "containsOnlyTriviaWhiteSpaces",
    "declarationList",
    "declarations",
    "default",
    "dotDotDotToken",
    "elements",
    "elementType",
    "elseStatement",
    "enabled",
    "endOfFileToken",
    "equalsGreaterThanToken",
    "equalsToken",
    "exclamationToken",
    "exportClause",
    "expression",
    "exprName",
    "extendsType",
    "falseType",
    "fileName",
    "finallyBlock",
    "fullName",
    "hasExtendedUnicodeEscape",
    "hasLeadingNewline",
    "hasNoDefaultLib",
    "hasTrailingComma",
    "hasTrailingNewLine",
    "head",
    "heritageClauses",
    "importClause",
    "incrementor",
    "indexType",
    "initializer",
    "isArrayType",
    "isBracketed",
    "isDeclarationFile",
    "isExportEquals",
    "isNameFirst",
    "isSpread",
    "isTypeOf",
    "isTypeOnly",
    "isUnterminated",
    "jsDocPropertyTags",
    "keywordToken",
    "kind",
    "label",
    "languageVariant",
    "left",
    "libReferenceDirectives",
    "literal",
    "members",
    "modifiers",
    "moduleName",
    "moduleReference",
    "moduleSpecifier",
    "multiLine",
    "name",
    "namedBindings",
    "namespace",
    "nameType",
    "objectAssignmentInitializer",
    "objectType",
    "openingElement",
    "openingFragment",
    "operand",
    "operatorToken",
    "parameterName",
    "parameters",
    "path",
    "possiblyExhaustive",
    "postfix",
    "preserve",
    "properties",
    "propertyName",
    "qualifier",
    "questionDotToken",
    "questionToken",
    "rawText",
    "readonlyToken",
    "referencedFiles",
    "resolutionMode",
    "resolvedSymbol",
    "right",
    "statement",
    "statements",
    "tag",
    "tagName",
    "tags",
    "template",
    "templateSpans",
    "text",
    "thenStatement",
    "token",
    "trueType",
    "tryBlock",
    "tupleNameSource",
    "type",
    "typeArguments",
    "typeExpression",
    "typeName",
    "typeParameter",
    "typeReferenceDirectives",
    "types",
    "value",
    "variableDeclaration",
    "whenFalse",
    "whenTrue",
]);
